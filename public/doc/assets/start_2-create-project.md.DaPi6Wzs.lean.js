import{_ as l}from"./chunks/setting.DSM9qr7X.js";import{_ as t,c as o,j as n,a,G as p,a0 as i,B as r,o as d}from"./chunks/framework.BEZymiH2.js";const c="/doc/start/crete-project.jpg",h=JSON.parse('{"title":"创建项目","description":"","frontmatter":{},"headers":[],"relativePath":"start/2-create-project.md","filePath":"start/2-create-project.md"}'),u={name:"start/2-create-project.md"};function m(g,s,b,k,j,v){const e=r("AppName");return d(),o("div",null,[s[7]||(s[7]=n("h1",{id:"创建项目",tabindex:"-1"},[a("创建项目 "),n("a",{class:"header-anchor",href:"#创建项目","aria-label":'Permalink to "创建项目"'},"​")],-1)),s[8]||(s[8]=n("h2",{id:"默认项目",tabindex:"-1"},[a("默认项目 "),n("a",{class:"header-anchor",href:"#默认项目","aria-label":'Permalink to "默认项目"'},"​")],-1)),n("p",null,[s[0]||(s[0]=a("运行")),p(e),s[1]||(s[1]=a("会打开一个名为")),s[2]||(s[2]=n("code",null,"defaultProject",-1)),s[3]||(s[3]=a("的默认启动项目，该项目位于默认项目路径下。通过菜单栏下拉菜单")),s[4]||(s[4]=n("code",null,"设置 - 系统 - 项目路径",-1)),s[5]||(s[5]=a("，查看或更改默认项目路径。修改设置后，需要关闭并重新运行")),p(e),s[6]||(s[6]=a("服务窗口（命令行窗口）使设置生效。"))]),s[9]||(s[9]=i('<p><img src="'+l+'" alt="setting"></p><p>如果下载了示例文件，将压缩包解压到项目路径下，点击菜单栏<code>打开</code>按钮，在打开的对话框中会显示这些示例程序。</p><h2 id="新建项目" tabindex="-1">新建项目 <a class="header-anchor" href="#新建项目" aria-label="Permalink to &quot;新建项目&quot;">​</a></h2><p>要新建项目，点击菜单栏上的<code>新建</code>按钮，然后在打开的对话框中输入项目名称，点击OK。</p><p><img src="'+c+`" alt="crete-project"></p><ul><li><strong>项目名称</strong>：用于创建项目文件夹，支持中文，也可以使用英文或者拼音。</li><li><strong>描述</strong>：项目描述，会在项目文件夹下创建一个<code>README.md</code>文件，此文件随时可以用记事本或代码编辑器修改，支持markdown语法，可以插入图片方便了解项目内容。</li><li><strong>模板</strong>：基础模板带有一个预置场景；空白模板是一个空的场景。</li><li><strong>在新窗口打开</strong>：如果勾选会在新窗口打开新建项目。</li></ul><p>点击<strong>OK</strong>按钮后，新项目会出现在设置的项目路径下。通过菜单栏下拉菜单的<code>浏览文件夹</code>，可以查看新项目的文件结构。</p><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p>默认的项目结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>myProject</span></span>
<span class="line"><span>├─ assets</span></span>
<span class="line"><span>|  ├─ css</span></span>
<span class="line"><span>|  |  └─ index.css</span></span>
<span class="line"><span>|  ├─ js</span></span>
<span class="line"><span>|  |  └─ babylon.js</span></span>
<span class="line"><span>|  ├─ media</span></span>
<span class="line"><span>|  |  └─ logo.svg</span></span>
<span class="line"><span>|  ├─ scene</span></span>
<span class="line"><span>|  |  └─ scene.babylon</span></span>
<span class="line"><span>|  └─ texture</span></span>
<span class="line"><span>|     ├─ backgroundGround.png</span></span>
<span class="line"><span>|     ├─ backgroundSkybox.dds</span></span>
<span class="line"><span>|     ├─ environment.dds</span></span>
<span class="line"><span>|     └─ environmentSpecular.env</span></span>
<span class="line"><span>└─ workspace.json</span></span></code></pre></div><ul><li>assets - （不可变）资源文件夹 <ul><li>css - （不可变）样式文件夹</li><li>js - （不可变）javascript文件夹</li><li>media - （不可变）图标、媒体文件夹</li><li>scene - 3D资产文件夹</li><li>texture - （不可变）默认环境贴图文件夹 <ul><li>backgroundGround.png - 地面贴图</li><li>backgroundSkybox.dds - 天空盒背景</li><li>environment.dds - 环境反射贴图</li><li>environmentSpecular.env - 环境照明贴图</li></ul></li></ul></li><li>workspace.json - （不可变）工作区文件，这个文件中保存了你在工作区编辑的拼图和代码</li></ul><p>在实际开发中，可能会用到很多3D资产，用户可以在<code>assets</code>文件夹中任意创建文件夹存放3D资产。</p>`,12))])}const P=t(u,[["render",m]]);export{h as __pageData,P as default};
