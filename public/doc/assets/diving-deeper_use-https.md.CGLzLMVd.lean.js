import{_ as e}from"./chunks/setting.DSM9qr7X.js";import{_ as a,c as o,a0 as s,o as c}from"./chunks/framework.BEZymiH2.js";const r="/doc/diving-deeper/https-mac.jpg",p="/doc/diving-deeper/https-mac1.jpg",P=JSON.parse('{"title":"使用HTTPS","description":"","frontmatter":{},"headers":[],"relativePath":"diving-deeper/use-https.md","filePath":"diving-deeper/use-https.md"}'),d={name:"diving-deeper/use-https.md"};function i(l,t,h,n,m,u){return c(),o("div",null,t[0]||(t[0]=[s('<h1 id="使用https" tabindex="-1">使用HTTPS <a class="header-anchor" href="#使用https" aria-label="Permalink to &quot;使用HTTPS&quot;">​</a></h1><h2 id="为什么要使用https" tabindex="-1">为什么要使用HTTPS <a class="header-anchor" href="#为什么要使用https" aria-label="Permalink to &quot;为什么要使用HTTPS&quot;">​</a></h2><p>在本软件中，当从本地访问远程服务器时，可能涉及https的问题，也就是不开https就访问不了别人的网站。这是远程服务器决定的。比如，我们要使用H网格分类中的拼图在三维场景中嵌入一个网站，使用场景分类中的“添加加载任务”拼图从远程服务器请求数据，如果对方强制https访问，你可能就拿不到数据。</p><p>开了https之后，你的地址栏是这样：<code>https://localhost:3001/defaultProject/~</code>。</p><h2 id="如何启用" tabindex="-1">如何启用 <a class="header-anchor" href="#如何启用" aria-label="Permalink to &quot;如何启用&quot;">​</a></h2><p>大体分以下两步：</p><ol><li>安装位于软件安装包<code>assets/tls</code>文件夹下的自签名证书<code>localhost.crt</code></li><li>证书安装后，在本软件<code>设置 - 系统 - 选项</code>中勾选<code>使用HTTPS</code>，然后重启软件命令行窗口</li></ol><p><img src="'+e+'" alt="setting"></p><h3 id="在macos中安装自签名证书" tabindex="-1">在MacOS中安装自签名证书 <a class="header-anchor" href="#在macos中安装自签名证书" aria-label="Permalink to &quot;在MacOS中安装自签名证书&quot;">​</a></h3><p>双击<code>localhost.crt</code>，证书会安装到macOS的钥匙串访问，如图：</p><p><img src="'+r+'" alt="https-mac.jpg"></p><p>现在证书显示不受信任，接着点击箭头指示的图标，在打开的对话框中的“信任”这一栏中，将“使用此证书时”设为“始终信任”。关闭对话框，安装完成。</p><p><img src="'+p+'" alt="https-mac1"></p><h3 id="在windows中安装自签名证书" tabindex="-1">在Windows中安装自签名证书 <a class="header-anchor" href="#在windows中安装自签名证书" aria-label="Permalink to &quot;在Windows中安装自签名证书&quot;">​</a></h3><p>双击<code>localhost.crt</code>，按照向导安装到默认位置。</p>',15)]))}const g=a(d,[["render",i]]);export{P as __pageData,g as default};
