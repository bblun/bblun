import{_ as t,c as o,a0 as e,o as r}from"./chunks/framework.BEZymiH2.js";const d="/doc/start/light.jpg",s="/doc/start/shadow.jpg",c="/doc/start/shadow1.jpg",f=JSON.parse('{"title":"灯光和阴影","description":"","frontmatter":{},"headers":[],"relativePath":"start/5-light-shadow.md","filePath":"start/5-light-shadow.md"}'),i={name:"start/5-light-shadow.md"};function l(h,a,p,n,m,_){return r(),o("div",null,a[0]||(a[0]=[e('<h1 id="灯光和阴影" tabindex="-1">灯光和阴影 <a class="header-anchor" href="#灯光和阴影" aria-label="Permalink to &quot;灯光和阴影&quot;">​</a></h1><p>可能很多人习惯在三维软件中设置灯光和阴影，然后再导出，但是往往会造成和实际效果存在偏差；那么，为什么不直接在最终的环境中打光呢？</p><h2 id="创建灯光" tabindex="-1">创建灯光 <a class="header-anchor" href="#创建灯光" aria-label="Permalink to &quot;创建灯光&quot;">​</a></h2><p>在灯光分类下找到<code>创建灯光</code>拼图，选择<code>平行光</code>类型。通过右键菜单-创建 “选项”，可以设置灯光的属性，如位置、方向、亮度等。位置属性不影响照明，但是会影响阴影，所以还是需要设置一下。</p><p>要调整属性值，可以使用“场景检查器”的工具在场景中交互的设置，再把属性值复制到拼图。而这里，使用“设置灯光目标”拼图比直接设置灯光方向属性要快一些。</p><p><img src="'+d+'" alt="light"></p><h2 id="创建阴影" tabindex="-1">创建阴影 <a class="header-anchor" href="#创建阴影" aria-label="Permalink to &quot;创建阴影&quot;">​</a></h2><ol><li>创建阴影 - 在灯光分类下的阴影子类中，使用<code>创建阴影</code>拼图创建阴影</li><li>设置网格接收阴影 - 默认环境地面是接收阴影的，但是加载的网格默认不会接收阴影，如有需要可以通过<code>网格属性</code>拼图设置<code>接收阴影</code>为<code>真</code></li><li>设置网格产生阴影 - 使用<code>添加投影网格</code>拼图可以指定哪些网格产生阴影</li></ol><p>阴影的过滤模式是一个很关键的参数，一般我们使用PCF和PCSS这两种过滤类型，PCF在效果和性能上比较均衡，PCSS结合“半影比率”可以获得柔和的边缘。</p><p><img src="'+s+'" alt="shadow"></p><p><img src="'+c+'" alt="shadow"></p>',11)]))}const u=t(i,[["render",l]]);export{f as __pageData,u as default};
