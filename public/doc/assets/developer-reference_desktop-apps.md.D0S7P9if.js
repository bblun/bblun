import{_ as n,c as p,j as e,a,G as t,a0 as l,B as o,o as r}from"./chunks/framework.BEZymiH2.js";const y=JSON.parse('{"title":"发布桌面应用","description":"","frontmatter":{},"headers":[],"relativePath":"developer-reference/desktop-apps.md","filePath":"developer-reference/desktop-apps.md"}'),d={name:"developer-reference/desktop-apps.md"};function h(k,s,c,g,u,m){const i=o("AppName");return r(),p("div",null,[s[12]||(s[12]=e("h1",{id:"发布桌面应用",tabindex:"-1"},[a("发布桌面应用 "),e("a",{class:"header-anchor",href:"#发布桌面应用","aria-label":'Permalink to "发布桌面应用"'},"​")],-1)),e("p",null,[s[0]||(s[0]=a("本文介绍利用electron将")),t(i),s[1]||(s[1]=a("应用发布为跨平台的桌面应用。跟着以下步骤，不需要写任何一行代码，只需复制、粘贴即可。"))]),s[13]||(s[13]=l('<nav class="table-of-contents"><ul><li><a href="#准备工作">准备工作</a></li><li><a href="#步骤">步骤</a><ul><li><a href="#_1-打开命令行或终端">1-打开命令行或终端</a></li><li><a href="#_2-创建electron项目">2-创建electron项目</a></li><li><a href="#_3-发布桌面应用">3-发布桌面应用</a></li></ul></li><li><a href="#订制应用">订制应用</a><ul><li><a href="#关闭开发者工具">关闭开发者工具</a></li><li><a href="#订制图标">订制图标</a></li></ul></li></ul></nav><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><ol><li>安装node.js（必须）</li></ol><p>从官网<a href="https://nodejs.org/" target="_blank" rel="noreferrer">https://nodejs.org/</a>下载最新长期维护版（LTS）node.js，安装过程略。</p><ol start="2"><li>安装vsCode代码编辑器（可选）</li></ol><p>从官网<a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a>下载vsCode。也可以使用其它代码编辑器。使用代码编辑器为了后续对桌面应用进行深度订制。</p><h2 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;">​</a></h2><h3 id="_1-打开命令行或终端" tabindex="-1">1-打开命令行或终端 <a class="header-anchor" href="#_1-打开命令行或终端" aria-label="Permalink to &quot;1-打开命令行或终端&quot;">​</a></h3><ul><li>windows系统在资源管理器的地址栏输入<code>cmd</code>，按回车打开命令行工具</li><li>macOS从应用中打开终端，或者通过聚焦搜索“终端”找到并打开</li></ul><h3 id="_2-创建electron项目" tabindex="-1">2-创建electron项目 <a class="header-anchor" href="#_2-创建electron项目" aria-label="Permalink to &quot;2-创建electron项目&quot;">​</a></h3><p>创建项目之前，为了保证安装速度，可以通过修改环境变量设置为国内的安装镜像。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ELECTRON_MIRROR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://npmmirror.com/mirrors/electron/&quot;</span></span></code></pre></div><p>windows系统从“我的电脑”右键菜单“属性”，打开“系统属性”面板，选择“高级”，打开“环境变量”，新建变量“ELECTRON_MIRROR”，值为“<a href="https://npmmirror.com/mirrors/electron/%E2%80%9D%E3%80%82" target="_blank" rel="noreferrer">https://npmmirror.com/mirrors/electron/”。</a></p><p>macOS在终端执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ELECTRON_MIRROR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://npmmirror.com/mirrors/electron/&quot;</span></span></code></pre></div><blockquote><p>在终端执行<code>env</code>查看所有环境变量，确保设置成功。</p></blockquote><p>创建electron项目，在命令行或终端执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> electron-app@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span></code></pre></div><p>执行命令后将在当前路径下创建<code>my-app</code>文件夹，并安装依赖。等待依赖安装完成，继续下一步。</p><h3 id="_3-发布桌面应用" tabindex="-1">3-发布桌面应用 <a class="header-anchor" href="#_3-发布桌面应用" aria-label="Permalink to &quot;3-发布桌面应用&quot;">​</a></h3>',20)),e("p",null,[s[2]||(s[2]=a("首先，在")),t(i),s[3]||(s[3]=a("中完成发布，将")),s[4]||(s[4]=e("code",null,"index.html",-1)),s[5]||(s[5]=a("和")),s[6]||(s[6]=e("code",null,"assets",-1)),s[7]||(s[7]=a("文件夹复制到")),s[8]||(s[8]=e("code",null,"my-app/src",-1)),s[9]||(s[9]=a("文件夹下，该文件夹下已有")),s[10]||(s[10]=e("code",null,"index.html",-1)),s[11]||(s[11]=a("，覆盖它即可。"))]),s[14]||(s[14]=l(`<p>然后，将工作路径切换到<code>my-app</code>，在命令行或终端执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span></code></pre></div><p>最后，执行发布命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span></span></code></pre></div><p>发布的桌面应用位于<code>my-app/out</code>。</p><h2 id="订制应用" tabindex="-1">订制应用 <a class="header-anchor" href="#订制应用" aria-label="Permalink to &quot;订制应用&quot;">​</a></h2><h3 id="关闭开发者工具" tabindex="-1">关闭开发者工具 <a class="header-anchor" href="#关闭开发者工具" aria-label="Permalink to &quot;关闭开发者工具&quot;">​</a></h3><p>默认开发者工具是打开的，要关闭它，用代码编辑器打开<code>my-app/src/index.js</code>，找到代码:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mainWindow.webContents.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openDevTools</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>将其删除或注释掉即可。</p><h3 id="订制图标" tabindex="-1">订制图标 <a class="header-anchor" href="#订制图标" aria-label="Permalink to &quot;订制图标&quot;">​</a></h3><p>支持的图标格式：</p><table tabindex="0"><thead><tr><th style="text-align:left;">操作系统</th><th style="text-align:left;">格式</th><th style="text-align:left;">尺寸</th></tr></thead><tbody><tr><td style="text-align:left;">macOS</td><td style="text-align:left;">.icns</td><td style="text-align:left;">512*512px(1024*1024Retina屏)</td></tr><tr><td style="text-align:left;">Windows</td><td style="text-align:left;">.ico</td><td style="text-align:left;">512*512px</td></tr></tbody></table><p>用代码编辑器打开<code>my-app/forge.config.js</code>，指定图标路径。假设图标位于<code>my-app/images</code>文件夹下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  packagerConfig: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/images/icon&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 无需扩展名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>参考：<a href="https://www.electronforge.io/guides/create-and-add-icons" target="_blank" rel="noreferrer">https://www.electronforge.io/guides/create-and-add-icons</a></p></blockquote>`,16))])}const E=n(d,[["render",h]]);export{y as __pageData,E as default};
